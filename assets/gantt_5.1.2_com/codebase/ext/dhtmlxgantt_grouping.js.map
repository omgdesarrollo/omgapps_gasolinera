{"version":3,"sources":["webpack:///dhtmlxgantt_grouping.js","webpack:///webpack/bootstrap c4a39cba6e1e70e8474e","webpack:///./sources/ext/grouping.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","11","12","gantt","_groups","relation_property","relation_id_property","group_id","group_text","loading","loaded","init","self","this","attachEvent","clear","originalGetParent","$data","tasksStore","getParent","task","is_active","get_parent","apply","arguments","originalSetParent","setParent","new_pid","isTaskExists","parent","getTask","_setParentInner","id","type","config","types","project","$virtual","eachTask","bind","t","tasks","undefined","_groups_pull","parent_id","root_id","find_parent","getTaskByTime","relation","root","length","generate_sections","list","groups_type","groups","group","copy","open","readonly","text","push","clear_temp_tasks","splice","generate_data","links","getLinks","categories","data","concat","update_settings","group_tasks","groups_array","_clear_data","parse","groupBy"],"mappings":"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","file":"dhtmlxgantt_grouping.js","sourcesContent":["/*!\n * @license\n * \n * dhtmlxGantt v.5.1.2 Professional\n * This software is covered by DHTMLX Commercial License. Usage without proper license is prohibited.\n * \n * (c) Dinamenta, UAB.\n * \n */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(12);\n\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports) {\n\ngantt._groups = {\n\trelation_property: null,\n\trelation_id_property: '$group_id',\n\tgroup_id:null,\n\tgroup_text:null,\n\tloading: false,\n\tloaded:0,\n\tinit: function(gantt){\n\t\tvar self = this;\n\n\t\tgantt.attachEvent(\"onClear\", function(){\n\t\t\tself.clear();\n\t\t});\n\t\tself.clear();\n\n\t\tvar originalGetParent = gantt.$data.tasksStore.getParent;// gantt._get_parent_id;\n\t\tgantt.$data.tasksStore.getParent = function(task){\n\t\t\tif(self.is_active()){\n\t\t\t\treturn self.get_parent(gantt, task);\n\t\t\t}else{\n\t\t\t\treturn originalGetParent.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\tvar originalSetParent = gantt.$data.tasksStore.setParent;\n\t\tgantt.$data.tasksStore.setParent = function(task, new_pid){\n\t\t\tif(!self.is_active()){\n\t\t\t\treturn originalSetParent.apply(this, arguments);\n\t\t\t}else if(gantt.isTaskExists(new_pid)){\n\t\t\t\tvar parent = gantt.getTask(new_pid);\n\t\t\t\ttask[self.relation_property] = parent[self.relation_id_property];\n\t\t\t\tthis._setParentInner.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\tgantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task){\n\t\t\tif(self.is_active()){\n\t\t\t\tif(task.type == gantt.config.types.project && !task.$virtual)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onBeforeParse\", function(){\n\t\t\tself.loading = true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskLoading\", function(){\n\t\t\tif(self.is_active()){\n\t\t\t\tself.loaded--;\n\t\t\t\tif(self.loaded <= 0){\n\t\t\t\t\tself.loading = false;\n\t\t\t\t\tgantt.eachTask(gantt.bind(function(t){\n\t\t\t\t\t\tthis.get_parent(gantt, t);\n\t\t\t\t\t}, self));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\n\t\t});\n\t\tgantt.attachEvent(\"onParse\", function(){\n\t\t\tself.loading = false;\n\t\t\tself.loaded = 0;\n\t\t});\n\t},\n\n\tget_parent: function(gantt, task, tasks){\n\n\t\tif(task.id === undefined){\n\t\t\ttask = gantt.getTask(task);\n\t\t}\n\n\t\tvar group_id = task[this.relation_property];\n\n\t\tif(this._groups_pull[group_id] !== undefined)\n\t\t\treturn this._groups_pull[group_id];\n\t\tvar parent_id = gantt.config.root_id;\n\n\t\tif(!this.loading){\n\t\t\tparent_id = this.find_parent(tasks || gantt.getTaskByTime(), group_id, this.relation_id_property, gantt.config.root_id);\n\t\t\tthis._groups_pull[group_id] = parent_id;\n\t\t}\n\n\t\treturn parent_id;\n\t},\n\tfind_parent: function(tasks, group_id, relation, root){\n\t\tfor(var i = 0; i < tasks.length; i++){\n\t\t\tvar task = tasks[i];\n\t\t\tif(task[relation] !== undefined && task[relation] == group_id){\n\t\t\t\treturn task.id;\n\t\t\t}\n\t\t}\n\t\treturn root;\n\t},\n\tclear: function(){\n\t\tthis._groups_pull = {};\n\t\tthis.relation_property = null;\n\t\tthis.group_id = null;\n\t\tthis.group_text = null;\n\t},\n\tis_active: function(){\n\t\treturn !!(this.relation_property);\n\t},\n\tgenerate_sections: function(list, groups_type){\n\t\tvar groups = [];\n\t\tfor(var i = 0; i < list.length; i++){\n\t\t\tvar group = gantt.copy(list[i]);\n\t\t\tgroup.type = groups_type;\n\t\t\tgroup.open = true;\n\t\t\tgroup.$virtual = true;\n\t\t\tgroup.readonly = true;\n\t\t\tgroup[this.relation_id_property] = group[this.group_id];\n\t\t\tgroup.text = group[this.group_text];\n\t\t\tgroups.push(group);\n\t\t}\n\t\treturn groups;\n\n\t},\n\tclear_temp_tasks: function(tasks){\n\t\tfor(var i =0; i < tasks.length; i++){\n\t\t\tif(tasks[i].$virtual){\n\t\t\t\ttasks.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgenerate_data: function(gantt, groups){\n\t\tvar links = gantt.getLinks();\n\t\tvar tasks = gantt.getTaskByTime();\n\n\t\tthis.clear_temp_tasks(tasks);\n\n\t\tvar categories = [];\n\t\tif(this.is_active() && groups && groups.length){\n\t\t\tcategories = this.generate_sections(groups, gantt.config.types.project);\n\t\t}\n\n\t\tvar data = {links: links};\n\t\tdata.data = categories.concat(tasks);\n\n\t\treturn data;\n\t},\n\tupdate_settings: function(relation, group_id, group_text){\n\t\tthis.clear();\n\t\tthis.relation_property = relation;\n\t\tthis.group_id = group_id;\n\t\tthis.group_text = group_text;\n\t},\n\tgroup_tasks: function (gantt, groups_array, relation_property, group_id, group_text){\n\t\tthis.update_settings(relation_property, group_id, group_text);\n\t\tvar data = this.generate_data(gantt, groups_array);\n\t\tthis.loaded = data.data.length;\n\t\tgantt._clear_data();\n\t\tgantt.parse(data);\n\t}\n};\n\ngantt._groups.init(gantt);\ngantt.groupBy = function(config){\n\tconfig = config || {};\n\n\tvar groups = config.groups || null,\n\t\trelation_property = config.relation_property || null,\n\t\tgroup_id = config.group_id||\"key\",\n\t\tgroup_text = config.group_text||\"label\";\n\n\tthis._groups.group_tasks(this, groups, relation_property, group_id, group_text);\n};\n\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// dhtmlxgantt_grouping.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c4a39cba6e1e70e8474e","gantt._groups = {\n\trelation_property: null,\n\trelation_id_property: '$group_id',\n\tgroup_id:null,\n\tgroup_text:null,\n\tloading: false,\n\tloaded:0,\n\tinit: function(gantt){\n\t\tvar self = this;\n\n\t\tgantt.attachEvent(\"onClear\", function(){\n\t\t\tself.clear();\n\t\t});\n\t\tself.clear();\n\n\t\tvar originalGetParent = gantt.$data.tasksStore.getParent;// gantt._get_parent_id;\n\t\tgantt.$data.tasksStore.getParent = function(task){\n\t\t\tif(self.is_active()){\n\t\t\t\treturn self.get_parent(gantt, task);\n\t\t\t}else{\n\t\t\t\treturn originalGetParent.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\tvar originalSetParent = gantt.$data.tasksStore.setParent;\n\t\tgantt.$data.tasksStore.setParent = function(task, new_pid){\n\t\t\tif(!self.is_active()){\n\t\t\t\treturn originalSetParent.apply(this, arguments);\n\t\t\t}else if(gantt.isTaskExists(new_pid)){\n\t\t\t\tvar parent = gantt.getTask(new_pid);\n\t\t\t\ttask[self.relation_property] = parent[self.relation_id_property];\n\t\t\t\tthis._setParentInner.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\tgantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task){\n\t\t\tif(self.is_active()){\n\t\t\t\tif(task.type == gantt.config.types.project && !task.$virtual)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onBeforeParse\", function(){\n\t\t\tself.loading = true;\n\t\t});\n\n\t\tgantt.attachEvent(\"onTaskLoading\", function(){\n\t\t\tif(self.is_active()){\n\t\t\t\tself.loaded--;\n\t\t\t\tif(self.loaded <= 0){\n\t\t\t\t\tself.loading = false;\n\t\t\t\t\tgantt.eachTask(gantt.bind(function(t){\n\t\t\t\t\t\tthis.get_parent(gantt, t);\n\t\t\t\t\t}, self));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\n\t\t});\n\t\tgantt.attachEvent(\"onParse\", function(){\n\t\t\tself.loading = false;\n\t\t\tself.loaded = 0;\n\t\t});\n\t},\n\n\tget_parent: function(gantt, task, tasks){\n\n\t\tif(task.id === undefined){\n\t\t\ttask = gantt.getTask(task);\n\t\t}\n\n\t\tvar group_id = task[this.relation_property];\n\n\t\tif(this._groups_pull[group_id] !== undefined)\n\t\t\treturn this._groups_pull[group_id];\n\t\tvar parent_id = gantt.config.root_id;\n\n\t\tif(!this.loading){\n\t\t\tparent_id = this.find_parent(tasks || gantt.getTaskByTime(), group_id, this.relation_id_property, gantt.config.root_id);\n\t\t\tthis._groups_pull[group_id] = parent_id;\n\t\t}\n\n\t\treturn parent_id;\n\t},\n\tfind_parent: function(tasks, group_id, relation, root){\n\t\tfor(var i = 0; i < tasks.length; i++){\n\t\t\tvar task = tasks[i];\n\t\t\tif(task[relation] !== undefined && task[relation] == group_id){\n\t\t\t\treturn task.id;\n\t\t\t}\n\t\t}\n\t\treturn root;\n\t},\n\tclear: function(){\n\t\tthis._groups_pull = {};\n\t\tthis.relation_property = null;\n\t\tthis.group_id = null;\n\t\tthis.group_text = null;\n\t},\n\tis_active: function(){\n\t\treturn !!(this.relation_property);\n\t},\n\tgenerate_sections: function(list, groups_type){\n\t\tvar groups = [];\n\t\tfor(var i = 0; i < list.length; i++){\n\t\t\tvar group = gantt.copy(list[i]);\n\t\t\tgroup.type = groups_type;\n\t\t\tgroup.open = true;\n\t\t\tgroup.$virtual = true;\n\t\t\tgroup.readonly = true;\n\t\t\tgroup[this.relation_id_property] = group[this.group_id];\n\t\t\tgroup.text = group[this.group_text];\n\t\t\tgroups.push(group);\n\t\t}\n\t\treturn groups;\n\n\t},\n\tclear_temp_tasks: function(tasks){\n\t\tfor(var i =0; i < tasks.length; i++){\n\t\t\tif(tasks[i].$virtual){\n\t\t\t\ttasks.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgenerate_data: function(gantt, groups){\n\t\tvar links = gantt.getLinks();\n\t\tvar tasks = gantt.getTaskByTime();\n\n\t\tthis.clear_temp_tasks(tasks);\n\n\t\tvar categories = [];\n\t\tif(this.is_active() && groups && groups.length){\n\t\t\tcategories = this.generate_sections(groups, gantt.config.types.project);\n\t\t}\n\n\t\tvar data = {links: links};\n\t\tdata.data = categories.concat(tasks);\n\n\t\treturn data;\n\t},\n\tupdate_settings: function(relation, group_id, group_text){\n\t\tthis.clear();\n\t\tthis.relation_property = relation;\n\t\tthis.group_id = group_id;\n\t\tthis.group_text = group_text;\n\t},\n\tgroup_tasks: function (gantt, groups_array, relation_property, group_id, group_text){\n\t\tthis.update_settings(relation_property, group_id, group_text);\n\t\tvar data = this.generate_data(gantt, groups_array);\n\t\tthis.loaded = data.data.length;\n\t\tgantt._clear_data();\n\t\tgantt.parse(data);\n\t}\n};\n\ngantt._groups.init(gantt);\ngantt.groupBy = function(config){\n\tconfig = config || {};\n\n\tvar groups = config.groups || null,\n\t\trelation_property = config.relation_property || null,\n\t\tgroup_id = config.group_id||\"key\",\n\t\tgroup_text = config.group_text||\"label\";\n\n\tthis._groups.group_tasks(this, groups, relation_property, group_id, group_text);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sources/ext/grouping.js\n// module id = 12\n// module chunks = 9"],"sourceRoot":""}